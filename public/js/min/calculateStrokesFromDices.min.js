function calculateStrokesFromRoll(){for(var l={0:{seat:1,dice1:{val:1,roll:2},dice2:{val:1,roll:1},dice3:{val:5,roll:3}},1:{seat:2,dice1:{val:1,roll:2},dice2:{val:3,roll:1},dice3:{val:6,roll:3}},2:{seat:3,dice1:{val:6,roll:3},dice2:{val:6,roll:1},dice3:{val:2,roll:3}},3:{seat:4,dice1:{val:1,roll:2},dice2:{val:1,roll:1},dice3:{val:2,roll:3}},4:{seat:5,dice1:{val:1,roll:2},dice2:{val:2,roll:1},dice3:{val:3,roll:3}},5:{seat:6,dice1:{val:1,roll:2},dice2:{val:2,roll:3},dice3:{val:5,roll:3}},6:{seat:7,dice1:{val:1,roll:2},dice2:{val:1,roll:1},dice3:{val:5,roll:3}},7:{seat:8,dice1:{val:1,roll:2},dice2:{val:3,roll:1},dice3:{val:6,roll:3}},8:{seat:9,dice1:{val:6,roll:3},dice2:{val:6,roll:1},dice3:{val:2,roll:3}},9:{seat:10,dice1:{val:1,roll:2},dice2:{val:1,roll:1},dice3:{val:2,roll:3}},10:{seat:11,dice1:{val:1,roll:2},dice2:{val:2,roll:1},dice3:{val:3,roll:3}},11:{seat:12,dice1:{val:1,roll:2},dice2:{val:2,roll:3},dice3:{val:5,roll:3}}},e=Object.keys(l).length,a=[],i=0;i<e;i++){var o=l[i].dice1.val+","+l[i].dice2.val+","+l[i].dice3.val;if(findOddOne(o.split(",").sort())>=2){var r=o.split(",").sort().join("");a.push({seat:l[i].seat,dices:r})}else{var r=o.split(",").sort().reverse().join("");a.push({seat:l[i].seat,dices:r})}}console.log("diceValues: ",a)}function findOddOne(l){var e={};return l.forEach(function(l){e[l]=(e[l]||0)+1}),e[1]}